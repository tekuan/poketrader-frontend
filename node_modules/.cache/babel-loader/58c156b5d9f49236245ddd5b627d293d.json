{"ast":null,"code":"var _jsxFileName = \"/home/spezi/poketraderme/poketraderme-frontend/src/components/Root.jsx\";\nimport Axios from \"axios\";\nimport React from \"react\";\nimport { API_HOST } from \"../config\";\nimport { alertService } from \"../services/alert\";\nimport SubscribeForm from \"./SubscribeForm\";\nimport UserTable from \"./UserTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Root extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      sendingRequest: false,\n      subscription: false\n    };\n    this.changeName = this.changeName.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  changeName(e) {\n    let name = e.target.value;\n    this.setState({\n      name\n    });\n  }\n\n  changeEmail(e) {\n    let email = e.target.value;\n    this.setState({\n      email\n    });\n  }\n\n  subscribe() {\n    this.setState({\n      sendingRequest: true\n    });\n\n    if (!this.state.name) {\n      return alertService.showError(\"Please input name!\");\n    }\n\n    if (!this.state.email) {\n      return alertService.showError(\"Please input email!\");\n    }\n\n    Axios.post(`${API_HOST}/users`, {\n      name: this.state.name,\n      email: this.state.email\n    }).then(res => {\n      if (res.data && res.data._id) {\n        this.setState({\n          subscription: true\n        });\n      } else {\n        alertService.showError(\"Subscription failed!\");\n      }\n    }).finally(() => {\n      this.setState({\n        sendingRequest: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: this.state.subscription ? /*#__PURE__*/_jsxDEV(UserTable, {\n        subscription: this.state.subscription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SubscribeForm, {\n        name: this.state.name,\n        email: this.state.email,\n        changeName: this.changeName,\n        changeEmail: this.changeEmail,\n        subscribe: this.subscribe,\n        sendingRequest: this.state.sendingRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Root;","map":{"version":3,"sources":["/home/spezi/poketraderme/poketraderme-frontend/src/components/Root.jsx"],"names":["Axios","React","API_HOST","alertService","SubscribeForm","UserTable","Root","Component","constructor","props","state","name","email","sendingRequest","subscription","changeName","bind","changeEmail","subscribe","e","target","value","setState","showError","post","then","res","data","_id","finally","render"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport React from \"react\";\nimport { API_HOST } from \"../config\";\nimport { alertService } from \"../services/alert\";\nimport SubscribeForm from \"./SubscribeForm\";\nimport UserTable from \"./UserTable\";\n\nclass Root extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      sendingRequest: false,\n      subscription: false,\n    };\n    this.changeName = this.changeName.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  changeName(e) {\n    let name = e.target.value;\n    this.setState({ name });\n  }\n\n  changeEmail(e) {\n    let email = e.target.value;\n    this.setState({ email });\n  }\n\n  subscribe() {\n    this.setState({\n      sendingRequest: true,\n    });\n    if (!this.state.name) {\n      return alertService.showError(\"Please input name!\");\n    }\n    if (!this.state.email) {\n      return alertService.showError(\"Please input email!\");\n    }\n    Axios.post(`${API_HOST}/users`, {\n      name: this.state.name,\n      email: this.state.email,\n    })\n      .then((res) => {\n        if (res.data && res.data._id) {\n          this.setState({\n            subscription: true,\n          });\n        } else {\n          alertService.showError(\"Subscription failed!\");\n        }\n      })\n      .finally(() => {\n        this.setState({\n          sendingRequest: false,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.state.subscription ? (\n          <UserTable subscription={this.state.subscription} />\n        ) : (\n          <SubscribeForm\n            name={this.state.name}\n            email={this.state.email}\n            changeName={this.changeName}\n            changeEmail={this.changeEmail}\n            subscribe={this.subscribe}\n            sendingRequest={this.state.sendingRequest}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Root;\n"]},"metadata":{},"sourceType":"module"}